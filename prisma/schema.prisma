generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model test {
  id   Int    @id
  name String @db.VarChar(50)
}

model product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  price       Decimal  @db.Decimal
  description String   @db.VarChar(500)
  stock       Int
  images      Int
  createdAt   DateTime @default(now())
  restockedAt DateTime @default(now())
  carts       cart     @relation(fields: [cartsId], references: [id])
  cartsId     Int
}

model cart {
  id         Int         @id @default(autoincrement())
  uid        String
  user       User        @relation(fields: [uid], references: [id], onDelete: Cascade)
  productsId Int[]
  products   product[]   @relation()
  purchased  Boolean     @default(false)
  purchases  purchase[]
}

model purchase {
  id     Int  @id @default(autoincrement())
  cartId Int
  cart   cart @relation(fields: [cartId], references: [id])
}

////////////////
// next-auth
////////////////
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  carts         cart[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
